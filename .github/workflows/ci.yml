name: Build and Test

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  test:
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Use install pnpm
      run: |
        corepack enable && \
        corepack prepare pnpm@8.5.1 --activate

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.7.0
      with:
        node-version: ${{ matrix.node-version }}
        check-latest: true
        cache: pnpm

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: install
      env:
        CI: true
      run: pnpm -r install --no-frozen-lockfile

    - name: Build
      env:
        CI: true
      run: pnpm all

    - name: Build (cdk)
      working-directory: cdk
      env:
        CI: true
      run: |
        pnpm lint && pnpm build

  configure:
    runs-on: ubuntu-latest

    if: github.actor != 'dependabot[bot]'

    steps:
    - name: Pull request auto merge enabler
      if: github.event_name == 'pull_request'
      uses: poad/github-pull-request-auto-merge-enable-action@v1.0.4
      with:
        pull_request_id: ${{ github.event.pull_request.node_id }}
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        repository: ${{ github.event.repository.name }}
        owner: ${{ github.repository_owner }}
        merge_method: SQUASH
